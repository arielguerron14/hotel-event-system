name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GitHubActionsRole
          aws-region: us-east-1

      # 3. Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # 4. Terraform Init
      - name: Initialize Terraform
        run: terraform init

      # 5. Terraform Apply
      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve

      # 6. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Pull Docker Images and Deploy
      - name: Deploy Auth Service
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
          docker run -d --name auth-service -p 3000:3000 \
            -e NODE_ENV=production \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Deploy Event Service
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/event-service:latest
          docker run -d --name event-service -p 3001:3001 \
            -e NODE_ENV=production \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            ${{ secrets.DOCKER_USERNAME }}/event-service:latest

      - name: Deploy Notification Service
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/notification-service:latest
          docker run -d --name notification-service -p 3002:3002 \
            -e NODE_ENV=production \
            -e EMAIL_SERVICE_API_KEY=${{ secrets.EMAIL_SERVICE_API_KEY }} \
            ${{ secrets.DOCKER_USERNAME }}/notification-service:latest

      - name: Deploy Payment Service
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/payment-service:latest
          docker run -d --name payment-service -p 3003:3003 \
            -e NODE_ENV=production \
            -e PAYMENT_GATEWAY_URL=${{ secrets.PAYMENT_GATEWAY_URL }} \
            ${{ secrets.DOCKER_USERNAME }}/payment-service:latest
